#######################
# Import libraries
import streamlit as st
import pandas as pd
import altair as alt
import plotly.express as px
import geopandas as gpd
from PIL import Image

#######################
# Page configuration
st.set_page_config(
    page_title="Var?",
    page_icon="游늳",
    layout="wide",
    initial_sidebar_state="expanded")

alt.theme.enable("default")


#######################
# Ladda in data
gdf = gpd.read_file('Data.gpkg')




#######################
# Sidebar - H칛mta input
with st.sidebar:

    st.title('Hur viktiga 칛r dessa fr친gor f칬r SKBs nya markstrategi?')
    
    Fn칛rhet = st.slider('Hur stor andel av kommun ligger inom 1 timme fr친n Stockholm eller Uppsala?', 0, 10, 5)
    FTomtr칛tt = st.slider('Till칛mpar kommunen tomtr칛tt?', 0, 10, 5)
    FDirektanvisar = st.slider('Direktanvisar kommunen mark?', 0, 10, 5)
    Fbefolkning = st.slider('Hur 칛r befolkningsutvecklingen i kommunen?', 0, 10, 5)
    Fmarkv칛rde = st.slider('Vad 칛r snittpriset per kvadratmeter p친 marken?', 0, 10, 5)
    Fgr칬n = st.slider('Hur stor 칛r kront칛ckningen i kommunen', 0, 10, 5)
    Fbest친nd = st.slider('Har SKB ett stort best친nd i kommunen?', 0, 10, 5)
    
########################
# Ber칛kna po칛ng baserat p친 input

gdf['po칛ng']=gdf['n칛rhet']*Fn칛rhet + gdf['Betyg - Direktanvisningar']*FDirektanvisar + gdf['Betyg - tomtr칛tt']*FTomtr칛tt+gdf['markv칛rde']*Fmarkv칛rde + gdf['Befolkingsutveckling - betyg']*Fbefolkning+ gdf['Best친nd']*Fbest친nd + gdf['kront칛ckning']*Fgr칬n
maxpo칛ng = 500
gdf = gdf.sort_values(by='po칛ng', ascending=False)

########################
# Definiera funktioner f칬r att skapa grafik

def make_map(gdf):
    color_scale = [
        (0, "rgba(255, 255, 255, 0.8)"),   
        (1, "rgba(0, 77, 115, 0.8)")     
    ]

    fig = px.choropleth_map(
        gdf,
        geojson=gdf.__geo_interface__,
        locations=gdf.index,
        color='po칛ng',
        hover_name='Kommun',
        hover_data={},
        color_continuous_scale=color_scale, 
        map_style="light",
        zoom=7, 
        center={"lat": 59.33, "lon": 18.07}
    )
    
    fig.update_layout(height=800)  # <-- Adjust height here

    return fig



#########################
# Plotta in content in Streamlit

col = st.columns((4, 2), gap='medium')

with col[0]:
    st.markdown('# 칐vning 2: VAR')
            
    Map = make_map(gdf)
    st.plotly_chart(Map, use_container_width=True)

    
    

with col[1]:
    st.write("")  
    st.write("")  
    st.write("") 
    st.write("")  
    st.write("")  
    st.write("")  
    st.write("") 
    st.write("")  
    st.markdown('#### Kommuner med h칬gst potential:')



    
    ### Create DF with top kommuner
    df_to_display = gdf[['Kommun', 'po칛ng']]

    
    st.dataframe(
            df_to_display,
            column_order=("Kommun", "po칛ng"),
            hide_index=True,
            width=None,
            column_config={
                "Kommun": st.column_config.TextColumn(
                    "Kommun",
                ),
                "po칛ng": st.column_config.ProgressColumn(
                    "po칛ng",
                    help=None,
                    min_value=0,
                    max_value=max(gdf.po칛ng),
                    format=" "
                )
            }
        )
    

    

    # Beskrivning
    with st.expander('Beskrivning', expanded=False):
        st.write('''
            Detta verktyg 칛r utvecklat av Urbanworks i syfte att underst칬dja SKBs styrelse till ett evidenbaserat f칬rh친llningss칛tt i framtagandet av en ny markstrategi. Datan som ligger till grund f칬r kartan du ser 칛r h칛mtad fr친n
                 Traveltime, kommunernas markpolicys, SCB, Svensk M칛klarstatistik, Boverket och SKB. Vi p친 Urbanworks har utifr친n detta dataunderlag po칛ngsatt kommunerna i varje kategori. Verktyget kan anv칛ndas f칬r att visa hur olika 
                 prioriteringar kan leda till att olika kommuner blir attraktiva f칬r SKB att investera i.''')

    st.write("")  
    st.write("")  


    # Setup logo
    image = Image.open('Urban Works_logga_svart_300 dpi.png')
    st.image(image, width=200)

    image1 = Image.open('SKB - logga.png')
    st.image(image1, width=200)



